{"ast":null,"code":"var _jsxFileName = \"/home/barun/Documents/food-jwt/food-app/src/pages/LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport apiUrl from \"../utils\";\nimport { InputField } from \"../components/atoms\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginPage() {\n  _s();\n\n  axios.interceptors.request.use(config => {\n    const {\n      origin\n    } = new URL(config.url);\n    const allowedOrigins = [apiUrl];\n    const token = localStorage.getItem(\"token\");\n\n    if (allowedOrigins.includes(origin)) {\n      config.headers.authorization = `Bearer ${token}`;\n    }\n\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n  const navigate = useNavigate();\n  const storedJwt = localStorage.getItem(\"token\");\n  const [jwt, setJwt] = useState(storedJwt || null); //   const [foods, setFoods] = useState([]);\n  //   const [fetchError, setFetchError] = useState(null);\n\n  const initialvalue = {\n    username: \"\",\n    password: \"\"\n  };\n  const [loginData, setLoginData] = useState(initialvalue); //POST\n\n  const getJwt = async value => {\n    const postData = {\n      username: value.username,\n      //input from form field username\n      password: value.password //input from form field password\n\n    };\n    const res = await axios.post(`/jwt`, postData);\n\n    if (res.status === 200) {\n      var _res$data, _res$data2;\n\n      localStorage.setItem(\"token\", (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.token);\n      setJwt((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.token);\n      navigate(\"/loggedIn\");\n    }\n  };\n\n  const handleChange = e => {\n    e.persist();\n    setLoginData(prevValue => ({ ...prevValue,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    getJwt(loginData);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-login\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(InputField, {\n          name: \"username\",\n          label: \"USERNAME\",\n          type: \"text\",\n          value: loginData.username,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          name: \"password\",\n          label: \"PASSWORD\",\n          type: \"password\",\n          value: loginData.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleSubmit,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 3\n      }, this), jwt && /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: jwt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginPage, \"RqKAZbpzBDfHT+ZsQIZaKDTdGV0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/home/barun/Documents/food-jwt/food-app/src/pages/LoginPage.js"],"names":["React","useState","axios","apiUrl","InputField","useNavigate","LoginPage","interceptors","request","use","config","origin","URL","url","allowedOrigins","token","localStorage","getItem","includes","headers","authorization","error","Promise","reject","navigate","storedJwt","jwt","setJwt","initialvalue","username","password","loginData","setLoginData","getJwt","value","postData","res","post","status","setItem","data","handleChange","e","persist","prevValue","target","name","handleSubmit","preventDefault","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport apiUrl from \"../utils\";\nimport { InputField} from \"../components/atoms\"\nimport { useNavigate } from \"react-router-dom\";\n\nfunction LoginPage() {\n\n    axios.interceptors.request.use(\n        (config) => {\n          const { origin } = new URL(config.url);\n      \n          const allowedOrigins = [apiUrl];\n      \n          const token = localStorage.getItem(\"token\");\n      \n          if (allowedOrigins.includes(origin)) {\n            config.headers.authorization = `Bearer ${token}`;\n          }\n      \n          return config;\n        },\n      \n        (error) => {\n          return Promise.reject(error);\n        }\n      );\n\n      const navigate = useNavigate();\n    const storedJwt = localStorage.getItem(\"token\");\n  const [jwt, setJwt] = useState(storedJwt || null);\n//   const [foods, setFoods] = useState([]);\n//   const [fetchError, setFetchError] = useState(null);\n\n  const initialvalue = {\n    username: \"\",\n    password: \"\",\n  }\n\n  const [loginData, setLoginData] = useState(initialvalue);\n\n    //POST\n    const getJwt = async (value) => {\n    const postData = {\n      username: value.username, //input from form field username\n      password: value.password, //input from form field password\n    };\n\n    const res = await axios.post(`/jwt`, postData);\n\n    if((res.status) === 200){\n    localStorage.setItem(\"token\" , res.data?.token);\n\n    setJwt(res.data?.token);\n\n      navigate(\"/loggedIn\");\n    }\n  };\n\n    const handleChange = (e) => {\n        e.persist();\n        setLoginData((prevValue) => ({\n          ...prevValue,\n          [e.target.name]: e.target.value,\n        }));\n      };\n    \n      function handleSubmit(e) {\n        e.preventDefault();\n        getJwt(loginData);\n      }\n\n    return ( \n        <div className=\"p-login\">\n        <section>\n            {/* This section is only shown if the user is */}\n            <h1>Login Page</h1></section>\n        \n\n      <section style={{ marginBottom: \"10px\" }}>\n      {/* Convert this into a form */}\n      <form>\n        \n        <InputField\n        name=\"username\"\n        label=\"USERNAME\"\n        type=\"text\"\n        value={loginData.username}\n        onChange={handleChange} \n        />\n\n        <InputField\n        name=\"password\"\n        label=\"PASSWORD\"\n        type=\"password\"\n        value={loginData.password}\n        onChange={handleChange}\n        />\n\n      </form>\n\n  {/* Also try to show some error message if login fails */}\n\n  <button type=\"submit\" onClick={handleSubmit}>Login</button>\n\n  {/* Also remove this and show some message instead */}\n  {jwt && (\n    <pre>\n      <code>{jwt}</code>\n    </pre>\n  )}\n\n  </section>\n</div>\n);\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}