{"ast":null,"code":"var _jsxFileName = \"/home/barun/Documents/food-jwt/food-app/src/pages/LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport apiUrl from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LoginPage() {\n  _s();\n\n  const storedJwt = localStorage.getItem(\"token\");\n  const [jwt, setJwt] = useState(storedJwt || null);\n  const [foods, setFoods] = useState([]);\n  const [fetchError, setFetchError] = useState(null);\n  const initialvalue = {\n    username: \"\",\n    password: \"\"\n  };\n  const [loginData, setLoginData] = useState(initialvalue); //POST\n\n  const getJwt = async value => {\n    const postData = {\n      username: value.username,\n      //input from form field username\n      password: value.password //input from form field password\n\n    };\n    const {\n      data\n    } = await axios.post(`${apiUrl}/jwt`, postData);\n    localStorage.setItem(\"token\", data.token);\n    setJwt(data.token);\n  };\n\n  const handleChange = e => {\n    e.persist();\n    setLoginData(() => ({\n      [e.target.name]: e.target.value\n    }));\n  }; // function handleSubmit(e) {\n  //   e.preventDefault();\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LoginPage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"username\",\n            label: \"USERNAME\",\n            value: loginData.username,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"password\",\n            label: \"PASSWORD\",\n            value: loginData.password,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getJwt(loginData),\n        children: \" LOGIN \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 3\n      }, this), jwt && /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: jwt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LoginPage, \"pwIKxQU2kxVBk3xdwXwA4LOUims=\");\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/home/barun/Documents/food-jwt/food-app/src/pages/LoginPage.js"],"names":["React","useState","axios","apiUrl","LoginPage","storedJwt","localStorage","getItem","jwt","setJwt","foods","setFoods","fetchError","setFetchError","initialvalue","username","password","loginData","setLoginData","getJwt","value","postData","data","post","setItem","token","handleChange","e","persist","target","name","marginBottom"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AAGjB,QAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAlB;AACF,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAACI,SAAS,IAAI,IAAd,CAA9B;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,IAAD,CAA5C;AAEA,QAAMa,YAAY,GAAG;AACnBC,IAAAA,QAAQ,EAAE,EADS;AAEnBC,IAAAA,QAAQ,EAAE;AAFS,GAArB;AAKA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAACa,YAAD,CAA1C,CAbmB,CAejB;;AACA,QAAMK,MAAM,GAAG,MAAOC,KAAP,IAAiB;AAChC,UAAMC,QAAQ,GAAG;AACfN,MAAAA,QAAQ,EAAEK,KAAK,CAACL,QADD;AACW;AAC1BC,MAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAFD,CAEW;;AAFX,KAAjB;AAKA,UAAM;AAAEM,MAAAA;AAAF,QAAW,MAAMpB,KAAK,CAACqB,IAAN,CAAY,GAAEpB,MAAO,MAArB,EAA4BkB,QAA5B,CAAvB;AAEAf,IAAAA,YAAY,CAACkB,OAAb,CAAqB,OAArB,EAA+BF,IAAI,CAACG,KAApC;AAEAhB,IAAAA,MAAM,CAACa,IAAI,CAACG,KAAN,CAAN;AACC,GAXD;;AAaA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,OAAF;AACAV,IAAAA,YAAY,CAAC,OAAO;AAClB,OAACS,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAAST;AADR,KAAP,CAAD,CAAZ;AAGD,GALH,CA7BiB,CAoCf;AACA;AACA;;;AAEF,sBACI;AAAA,4BACA;AAAA,6BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADA,eAMF;AAAS,MAAA,KAAK,EAAE;AAAEW,QAAAA,YAAY,EAAE;AAAhB,OAAhB;AAAA,8BACE;AAAA,+BAEF;AAAA,kCAEE;AACA,YAAA,IAAI,EAAC,UADL;AAEA,YAAA,KAAK,EAAC,UAFN;AAGA,YAAA,KAAK,EAAEd,SAAS,CAACF,QAHjB;AAIA,YAAA,QAAQ,EAAEW;AAJV;AAAA;AAAA;AAAA;AAAA,kBAFF,eASE;AACA,YAAA,IAAI,EAAC,UADL;AAEA,YAAA,KAAK,EAAC,UAFN;AAGA,YAAA,KAAK,EAAET,SAAS,CAACD,QAHjB;AAIA,YAAA,QAAQ,EAAEU;AAJV;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFE;AAAA;AAAA;AAAA;AAAA,cADF,eAwBJ;AAAQ,QAAA,OAAO,EAAE,MAAMP,MAAM,CAACF,SAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBI,EA2BHT,GAAG,iBACF;AAAA,+BACE;AAAA,oBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA5BE;AAAA;AAAA;AAAA;AAAA;AAAA,YANE;AAAA,kBADJ;AA2CH;;GAnFQJ,S;;KAAAA,S;AAqFT,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport apiUrl from \"../utils\";\n\nfunction LoginPage() {\n\n\n    const storedJwt = localStorage.getItem(\"token\");\n  const [jwt, setJwt] = useState(storedJwt || null);\n  const [foods, setFoods] = useState([]);\n  const [fetchError, setFetchError] = useState(null);\n\n  const initialvalue = {\n    username: \"\",\n    password: \"\",\n  }\n\n  const [loginData, setLoginData] = useState(initialvalue);\n\n    //POST\n    const getJwt = async (value) => {\n    const postData = {\n      username: value.username, //input from form field username\n      password: value.password, //input from form field password\n    };\n\n    const { data } = await axios.post(`${apiUrl}/jwt`, postData);\n\n    localStorage.setItem(\"token\" , data.token);\n\n    setJwt(data.token);\n    };\n\n    const handleChange = (e) => {\n        e.persist();\n        setLoginData(() => ({\n          [e.target.name]: e.target.value,\n        }));\n      };\n    \n      // function handleSubmit(e) {\n      //   e.preventDefault();\n      // }\n\n    return ( \n        <>\n        <section>\n            {/* This section is only shown if the user is */}\n            <h1>LoginPage</h1></section>\n        \n\n      <section style={{ marginBottom: \"10px\" }}>\n        <section>\n      {/* Convert this into a form */}\n      <form>\n        \n        <input\n        name=\"username\"\n        label=\"USERNAME\"\n        value={loginData.username}\n        onChange={handleChange} \n        />\n\n        <input\n        name=\"password\"\n        label=\"PASSWORD\"\n        value={loginData.password}\n        onChange={handleChange}\n        />\n\n      </form>\n</section>\n\n  {/* Also try to show some error message if login fails */}\n\n  <button onClick={() => getJwt(loginData)}> LOGIN </button>\n\n  {/* Also remove this and show some message instead */}\n  {jwt && (\n    <pre>\n      <code>{jwt}</code>\n    </pre>\n  )}\n\n  </section>\n</>\n);\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}