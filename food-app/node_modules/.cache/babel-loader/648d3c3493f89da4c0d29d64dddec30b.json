{"ast":null,"code":"var _jsxFileName = \"/home/barun/Documents/food-jwt/food-app/src/pages/AfterLogin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport apiUrl from \"../utils\";\nimport axios from \"axios\";\nimport { Button } from \"../components/atoms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AfterLogin() {\n  _s();\n\n  axios.interceptors.request.use(config => {\n    const {\n      origin\n    } = new URL(config.url);\n    const allowedOrigins = [apiUrl];\n    const token = localStorage.getItem(\"token\");\n\n    if (allowedOrigins.includes(origin)) {\n      config.headers.authorization = `Bearer ${token}`;\n    }\n\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n  const [foods, setFoods] = useState([]);\n  const [fetchError, setFetchError] = useState(null); //GET\n\n  const getFoods = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(`${apiUrl}/foods`);\n      setFoods(data);\n      setFetchError(null);\n    } catch (err) {\n      setFetchError(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AfterLogin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getFoods(),\n        children: \"Get Foods\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: foods.map((food, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: food.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 3\n      }, this), fetchError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: fetchError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"LOGOUT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AfterLogin, \"tLmZIbsGFigPP8fY6CapR5IZE28=\");\n\n_c = AfterLogin;\nexport default AfterLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"AfterLogin\");","map":{"version":3,"sources":["/home/barun/Documents/food-jwt/food-app/src/pages/AfterLogin.js"],"names":["React","useState","apiUrl","axios","Button","AfterLogin","interceptors","request","use","config","origin","URL","url","allowedOrigins","token","localStorage","getItem","includes","headers","authorization","error","Promise","reject","foods","setFoods","fetchError","setFetchError","getFoods","data","get","err","message","map","food","i","description","color","logout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,qBAAvB;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAEpBF,EAAAA,KAAK,CAACG,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACGC,MAAD,IAAY;AACV,UAAM;AAAEC,MAAAA;AAAF,QAAa,IAAIC,GAAJ,CAAQF,MAAM,CAACG,GAAf,CAAnB;AAEA,UAAMC,cAAc,GAAG,CAACX,MAAD,CAAvB;AAEA,UAAMY,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AAEA,QAAIH,cAAc,CAACI,QAAf,CAAwBP,MAAxB,CAAJ,EAAqC;AACnCD,MAAAA,MAAM,CAACS,OAAP,CAAeC,aAAf,GAAgC,UAASL,KAAM,EAA/C;AACD;;AAED,WAAOL,MAAP;AACD,GAbH,EAeGW,KAAD,IAAW;AACT,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,GAjBH;AAqBE,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACwB,UAAD,EAAaC,aAAb,IAA8BzB,QAAQ,CAAC,IAAD,CAA5C,CAxBkB,CA0BlB;;AACF,QAAM0B,QAAQ,GAAG,YAAY;AAC3B,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMzB,KAAK,CAAC0B,GAAN,CAAW,GAAE3B,MAAO,QAApB,CAAvB;AAEAsB,MAAAA,QAAQ,CAACI,IAAD,CAAR;AAEAF,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAND,CAOA,OAAMI,GAAN,EAAW;AACTJ,MAAAA,aAAa,CAACI,GAAG,CAACC,OAAL,CAAb;AACD;AACF,GAXD;;AAaE,sBACI;AAAA,4BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAL,eACI;AAAA,8BAGV;AAAQ,QAAA,OAAO,EAAE,MAAMJ,QAAQ,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHU,eAKV;AAAA,kBACGJ,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBACP;AAAA,oBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,gBADH;AADH;AAAA;AAAA;AAAA;AAAA,cALU,EAWTV,UAAU,iBAAI;AAAG,QAAA,KAAK,EAAI;AAAEW,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA,kBAA8BX;AAA9B;AAAA;AAAA;AAAA;AAAA,cAXL,eAaV;AAAQ,QAAA,OAAO,EAAEY,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbU;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GA3DQhC,U;;KAAAA,U;AA6DT,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport apiUrl from \"../utils\";\nimport axios from \"axios\";\nimport { Button } from \"../components/atoms\";\n\nfunction AfterLogin() {\n\n  axios.interceptors.request.use(\n    (config) => {\n      const { origin } = new URL(config.url);\n  \n      const allowedOrigins = [apiUrl];\n  \n      const token = localStorage.getItem(\"token\");\n  \n      if (allowedOrigins.includes(origin)) {\n        config.headers.authorization = `Bearer ${token}`;\n      }\n  \n      return config;\n    },\n  \n    (error) => {\n      return Promise.reject(error);\n    }\n  );\n\n  \n    const [foods, setFoods] = useState([]);\n    const [fetchError, setFetchError] = useState(null);\n\n    //GET\n  const getFoods = async () => {\n    try {\n      const { data } = await axios.get(`${apiUrl}/foods`);\n\n      setFoods(data);\n\n      setFetchError(null);\n    } \n    catch(err) {\n      setFetchError(err.message);\n    }\n  };\n\n    return ( \n        <div><h1>AfterLogin</h1>\n            <section>\n\n{/* This section should only be displayed if logged in */}\n  <button onClick={() => getFoods()}>Get Foods</button>\n\n  <ul>\n    {foods.map((food, i) => (\n        <li>{food.description}</li>\n    ))}\n  </ul>\n\n  {fetchError && <p style = {{ color: \"red\"}}>{fetchError}</p>}\n\n  <button onClick={logout}>LOGOUT</button>\n</section>\n        </div>\n     );\n}\n\nexport default AfterLogin;"]},"metadata":{},"sourceType":"module"}