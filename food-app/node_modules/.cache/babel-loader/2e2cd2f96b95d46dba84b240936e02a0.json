{"ast":null,"code":"var _jsxFileName = \"/home/barun/Documents/food-jwt/food-app/src/pages/LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport apiUrl from \"../utils\";\nimport { Button, InputField } from \"../components/atoms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginPage() {\n  _s();\n\n  axios.interceptors.request.use(config => {\n    const {\n      origin\n    } = new URL(config.url);\n    const allowedOrigins = [apiUrl];\n    const token = localStorage.getItem(\"token\");\n\n    if (allowedOrigins.includes(origin)) {\n      config.headers.authorization = `Bearer ${token}`;\n    }\n\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n  const storedJwt = localStorage.getItem(\"token\");\n  const [jwt, setJwt] = useState(storedJwt || null); //   const [foods, setFoods] = useState([]);\n  //   const [fetchError, setFetchError] = useState(null);\n\n  const initialvalue = {\n    username: \"\",\n    password: \"\"\n  };\n  const [loginData, setLoginData] = useState(initialvalue); //POST\n\n  const getJwt = async value => {\n    const postData = {\n      username: value.username,\n      //input from form field username\n      password: value.password //input from form field password\n\n    };\n    const {\n      data\n    } = await axios.post(`${apiUrl}/jwt`, postData);\n    localStorage.setItem(\"token\", data.token);\n    setJwt(data.token);\n  };\n\n  const handleChange = e => {\n    e.persist();\n    setLoginData(prevValue => ({ ...prevValue,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    getJwt(loginData);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-login\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(InputField, {\n          name: \"username\",\n          label: \"USERNAME\",\n          value: loginData.username,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          name: \"password\",\n          label: \"PASSWORD\",\n          value: loginData.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        label: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 3\n      }, this), jwt && /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: jwt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginPage, \"kP5Fncw3ionJdzZSYe/ow9Xq3c4=\");\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/home/barun/Documents/food-jwt/food-app/src/pages/LoginPage.js"],"names":["React","useState","axios","apiUrl","Button","InputField","LoginPage","interceptors","request","use","config","origin","URL","url","allowedOrigins","token","localStorage","getItem","includes","headers","authorization","error","Promise","reject","storedJwt","jwt","setJwt","initialvalue","username","password","loginData","setLoginData","getJwt","value","postData","data","post","setItem","handleChange","e","persist","prevValue","target","name","handleSubmit","preventDefault","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport apiUrl from \"../utils\";\nimport {Button, InputField} from \"../components/atoms\"\n\nfunction LoginPage() {\n\n    axios.interceptors.request.use(\n        (config) => {\n          const { origin } = new URL(config.url);\n      \n          const allowedOrigins = [apiUrl];\n      \n          const token = localStorage.getItem(\"token\");\n      \n          if (allowedOrigins.includes(origin)) {\n            config.headers.authorization = `Bearer ${token}`;\n          }\n      \n          return config;\n        },\n      \n        (error) => {\n          return Promise.reject(error);\n        }\n      );\n\n    const storedJwt = localStorage.getItem(\"token\");\n  const [jwt, setJwt] = useState(storedJwt || null);\n//   const [foods, setFoods] = useState([]);\n//   const [fetchError, setFetchError] = useState(null);\n\n  const initialvalue = {\n    username: \"\",\n    password: \"\",\n  }\n\n  const [loginData, setLoginData] = useState(initialvalue);\n\n    //POST\n    const getJwt = async (value) => {\n    const postData = {\n      username: value.username, //input from form field username\n      password: value.password, //input from form field password\n    };\n\n    const { data } = await axios.post(`${apiUrl}/jwt`, postData);\n\n    localStorage.setItem(\"token\" , data.token);\n\n    setJwt(data.token);\n    };\n\n    const handleChange = (e) => {\n        e.persist();\n        setLoginData((prevValue) => ({\n          ...prevValue,\n          [e.target.name]: e.target.value,\n        }));\n      };\n    \n      function handleSubmit(e) {\n        e.preventDefault();\n        getJwt(loginData);\n      }\n\n    return ( \n        <div className=\"p-login\">\n        <section>\n            {/* This section is only shown if the user is */}\n            <h1>Login Page</h1></section>\n        \n\n      <section style={{ marginBottom: \"10px\" }}>\n      {/* Convert this into a form */}\n      <form onSubmit={handleSubmit}>\n        \n        <InputField\n        name=\"username\"\n        label=\"USERNAME\"\n        value={loginData.username}\n        onChange={handleChange} \n        />\n\n        <InputField\n        name=\"password\"\n        label=\"PASSWORD\"\n        value={loginData.password}\n        onChange={handleChange}\n        />\n\n      </form>\n\n  {/* Also try to show some error message if login fails */}\n\n  <Button onClick={handleSubmit} label=\"Login\"/>\n\n  {/* Also remove this and show some message instead */}\n  {jwt && (\n    <pre>\n      <code>{jwt}</code>\n    </pre>\n  )}\n\n  </section>\n</div>\n);\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}