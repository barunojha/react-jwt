{"ast":null,"code":"var _jsxFileName = \"/home/sujan/Development/JWT-Project/food-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiUrl = \"http://localhost:3001\";\naxios.interceptors.request.use(config => {\n  const {\n    origin\n  } = new URL(config.url);\n  const allowedOrigins = [apiUrl];\n  const token = localStorage.getItem(\"token\");\n\n  if (allowedOrigins.includes(origin)) {\n    config.headers.authorization = `Bearer ${token}`;\n  }\n\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\nfunction App() {\n  _s();\n\n  const storedJwt = localStorage.getItem(\"token\");\n  const [jwt, setJwt] = useState(storedJwt || null);\n  const [foods, setFoods] = useState([]);\n  const [fetchError, setFetchError] = useState(null); // POSt\n\n  const getJwt = async value => {\n    const postData = {\n      username: value.username,\n      // input from form field username\n      password: value.password // input from form field password\n\n    };\n    const {\n      data\n    } = await axios.post(`${apiUrl}/jwt`, postData);\n    localStorage.setItem(\"token\", data.token);\n    setJwt(data.token);\n  }; // Get\n\n\n  const getFoods = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(`${apiUrl}/foods`);\n      setFoods(data);\n      setFetchError(null);\n    } catch (err) {\n      setFetchError(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getJwt(),\n        children: \"Get JWT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), jwt && /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: jwt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getFoods(),\n        children: \"Get Foods\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: foods.map((food, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: food.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), fetchError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: fetchError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"EzXAJbwPsTMfmNfl67OEHeAxF0g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sujan/Development/JWT-Project/food-app/src/App.js"],"names":["React","useState","axios","apiUrl","interceptors","request","use","config","origin","URL","url","allowedOrigins","token","localStorage","getItem","includes","headers","authorization","error","Promise","reject","App","storedJwt","jwt","setJwt","foods","setFoods","fetchError","setFetchError","getJwt","value","postData","username","password","data","post","setItem","getFoods","get","err","message","marginBottom","map","food","i","description","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nconst apiUrl = \"http://localhost:3001\";\n\naxios.interceptors.request.use(\n  (config) => {\n    const { origin } = new URL(config.url);\n\n    const allowedOrigins = [apiUrl];\n\n    const token = localStorage.getItem(\"token\");\n\n    if (allowedOrigins.includes(origin)) {\n      config.headers.authorization = `Bearer ${token}`;\n    }\n\n    return config;\n  },\n\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nfunction App() {\n  const storedJwt = localStorage.getItem(\"token\");\n  const [jwt, setJwt] = useState(storedJwt || null);\n  const [foods, setFoods] = useState([]);\n  const [fetchError, setFetchError] = useState(null);\n\n  // POSt\n  const getJwt = async (value) => {\n    const postData = {\n      username: value.username, // input from form field username\n      password: value.password, // input from form field password\n    };\n\n    const { data } = await axios.post(`${apiUrl}/jwt`, postData);\n\n    localStorage.setItem(\"token\", data.token);\n\n    setJwt(data.token);\n  };\n\n  // Get\n  const getFoods = async () => {\n    try {\n      const { data } = await axios.get(`${apiUrl}/foods`);\n\n      setFoods(data);\n\n      setFetchError(null);\n    } catch (err) {\n      setFetchError(err.message);\n    }\n  };\n\n  return (\n    <>\n      <section style={{ marginBottom: \"10px\" }}>\n        <button onClick={() => getJwt()}>Get JWT</button>\n\n        {jwt && (\n          <pre>\n            <code>{jwt}</code>\n          </pre>\n        )}\n      </section>\n\n      <section>\n        <button onClick={() => getFoods()}>Get Foods</button>\n\n        <ul>\n          {foods.map((food, i) => (\n            <li>{food.description}</li>\n          ))}\n        </ul>\n\n        {fetchError && <p style={{ color: \"red\" }}>{fetchError}</p>}\n      </section>\n    </>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}